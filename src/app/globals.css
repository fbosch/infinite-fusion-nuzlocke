@import 'tailwindcss';

@theme {
  --color-primary: #3b82f6;
  --color-primary-dark: #1d4ed8;
  --font-family-sans:
    var(--font-ibmplex), system-ui, -apple-system, BlinkMacSystemFont,
    'Segoe UI', Roboto, sans-serif;
  --font-family-mono: var(--font-dotgothic16), 'Courier New', monospace;
}

/* Ensure DotGothic16 is available for font-mono */
.font-ds {
  font-family: var(--font-ds), 'Courier New', monospace !important;
  -webkit-font-smoothing: none !important;
  -moz-osx-font-smoothing: none !important;
  font-smooth: never !important;
  font-size-adjust: 0.5;
}

@custom-variant dark (&:where(.dark, .dark *));

@utility pixel-shadow-* {
  /* Resolve base color from theme or arbitrary color */
  --_px-shadow-color: --value(--color-*, [color]);

  /* Base output (no modifier) */
  text-shadow: 0.05em 0px 0px var(--_px-shadow-color);
  filter: drop-shadow(0em 0.08em 0px var(--_px-shadow-color));

  /* With percentage modifier like /20% */
  text-shadow: 0.05em 0px 0px
    color-mix(
      in oklab,
      transparent calc(100% - --modifier([percentage])),
      var(--_px-shadow-color) --modifier([percentage])
    );
  filter: drop-shadow(
    0em 0.08em 0px
      color-mix(
        in oklab,
        transparent calc(100% - --modifier([percentage])),
        var(--_px-shadow-color) --modifier([percentage])
      )
  );

  /* With integer modifier like /20 (interpreted as %) */
  text-shadow: 0.05em 0px 0px
    color-mix(
      in oklab,
      transparent calc(100% - (calc(--modifier(integer) * 1%))),
      var(--_px-shadow-color) calc(--modifier(integer) * 1%)
    );
  filter: drop-shadow(
    0em 0.08em 0px
      color-mix(
        in oklab,
        transparent calc(100% - (calc(--modifier(integer) * 1%))),
        var(--_px-shadow-color) calc(--modifier(integer) * 1%)
      )
  );
}

@utility content-visibility-auto {
  content-visibility: auto;
}

@utility content-visibility-hidden {
  content-visibility: hidden;
}

@utility content-visibility-visible {
  content-visibility: visible;
}

@utility contain-intrinsic-height-* {
  contain-intrinsic-height: --value([length]);
  contain-intrinsic-height: --value(integer) px;
}

body {
  font-family: var(--font-family-sans);
  background-color: #f9fafb;
  /* bg-gray-50 */
  min-height: 100vh;
}

.dark body {
  background-color: #111827;
  /* bg-gray-900 */
}

/* Ensure dark mode works with Tailwind v4 */
:root {
  color-scheme: light;
}

.dark {
  color-scheme: dark;
}

/* Custom scrollbar styles for virtualized components */
.scrollbar-thin {
  scrollbar-width: thin;
  scrollbar-color: #d1d5db transparent;
}

.scrollbar-thin::-webkit-scrollbar {
  width: 6px;
}

.scrollbar-thin::-webkit-scrollbar-track {
  background: transparent;
}

.scrollbar-thin::-webkit-scrollbar-thumb {
  background-color: #d1d5db;
  border-radius: 3px;
}

.scrollbar-thin::-webkit-scrollbar-thumb:hover {
  background-color: #9ca3af;
}

/* Dark mode scrollbar */
.dark .scrollbar-thin {
  scrollbar-color: #4b5563 transparent;
}

.dark .scrollbar-thin::-webkit-scrollbar-thumb {
  background-color: #4b5563;
}

.dark .scrollbar-thin::-webkit-scrollbar-thumb:hover {
  background-color: #6b7280;
}

/* Image rendering utilities for pixel art sprites */
.image-render-pixelated {
  image-rendering: pixelated;
}

/* Ensure absolutely positioned canvas overlays match container size */
.absolute > canvas.w-full.h-full {
  width: 100%;
  height: 100%;
  display: block;
}

.image-render-crisp-edges {
  image-rendering: crisp-edges;
}

.image-render-auto {
  image-rendering: auto;
}

.image-render-smooth {
  image-rendering: smooth;
}

.image-render-high-quality {
  image-rendering: high-quality;
}

/* Shimmer loading animation */
@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }

  100% {
    transform: translateX(100%);
  }
}

.shimmer {
  position: relative;
  overflow: hidden;
  background: #f3f4f6;
}

.shimmer::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(255, 255, 255, 0.4) 50%,
    transparent 100%
  );
  animation: shimmer 1.5s infinite ease-in-out;
  will-change: transform;
}

.dark .shimmer {
  background: #374151;
}

.dark .shimmer::before {
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(255, 255, 255, 0.1) 50%,
    transparent 100%
  );
}

/* Tooltip animations - replicating framer-motion behavior */
@keyframes tooltipEnter {
  from {
    opacity: 0;
    transform: scale(0.95);
  }

  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes tooltipExit {
  from {
    opacity: 1;
    transform: scale(1);
  }

  to {
    opacity: 0;
    transform: scale(0.95);
  }
}

.tooltip-enter {
  animation: tooltipEnter 0.05s ease-out forwards;
  will-change: opacity, transform;
}

.tooltip-exit {
  animation: tooltipExit 0.05s ease-out forwards;
  will-change: opacity, transform;
}

/* Global button press animation */
button {
  @apply cursor-pointer transition-transform duration-150 ease-out enabled:active:scale-[.97];
}

[role='button'] {
  @apply cursor-pointer transition-transform duration-150 ease-out;
}

[role='button']:not([aria-disabled='true']):active {
  @apply scale-[.97];
}

button:disabled,
[aria-disabled='true'] {
  @apply cursor-not-allowed;
}
